---
- name: Install required packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: true

- name: Create Docker GPG directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ [ansible_architecture] | map('extract', docker_deb_architecture) | first }}
      signed-by=/etc/apt/keyrings/docker.asc]
      https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}
      {{ ansible_distribution_release }} stable
    state: present

- name: Install Docker
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Enable Docker
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Configure Docker daemon
  ansible.builtin.copy:
    content: "{{ docker_config.daemon_config | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: Restart Docker

- name: Create docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ item.username }}"
    groups: docker
    append: true
  loop: "{{ global_config.users }}"
